// Generated by view binder compiler. Do not edit!
package com.example.studibook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.studibook.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHelpSupportBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout emailLayout;

  @NonNull
  public final LinearLayout emailsLayout;

  @NonNull
  public final LinearLayout phoneLayout;

  @NonNull
  public final LinearLayout phonesLayout;

  @NonNull
  public final LinearLayout photoLayout;

  @NonNull
  public final LinearLayout photosLayout;

  @NonNull
  public final ConstraintLayout topLayout;

  private FragmentHelpSupportBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout emailLayout, @NonNull LinearLayout emailsLayout,
      @NonNull LinearLayout phoneLayout, @NonNull LinearLayout phonesLayout,
      @NonNull LinearLayout photoLayout, @NonNull LinearLayout photosLayout,
      @NonNull ConstraintLayout topLayout) {
    this.rootView = rootView;
    this.emailLayout = emailLayout;
    this.emailsLayout = emailsLayout;
    this.phoneLayout = phoneLayout;
    this.phonesLayout = phonesLayout;
    this.photoLayout = photoLayout;
    this.photosLayout = photosLayout;
    this.topLayout = topLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHelpSupportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHelpSupportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_help_support, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHelpSupportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.email_layout;
      LinearLayout emailLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailLayout == null) {
        break missingId;
      }

      id = R.id.emails_layout;
      LinearLayout emailsLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailsLayout == null) {
        break missingId;
      }

      id = R.id.phone_layout;
      LinearLayout phoneLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneLayout == null) {
        break missingId;
      }

      id = R.id.phones_layout;
      LinearLayout phonesLayout = ViewBindings.findChildViewById(rootView, id);
      if (phonesLayout == null) {
        break missingId;
      }

      id = R.id.photo_layout;
      LinearLayout photoLayout = ViewBindings.findChildViewById(rootView, id);
      if (photoLayout == null) {
        break missingId;
      }

      id = R.id.photos_layout;
      LinearLayout photosLayout = ViewBindings.findChildViewById(rootView, id);
      if (photosLayout == null) {
        break missingId;
      }

      id = R.id.top_layout;
      ConstraintLayout topLayout = ViewBindings.findChildViewById(rootView, id);
      if (topLayout == null) {
        break missingId;
      }

      return new FragmentHelpSupportBinding((ConstraintLayout) rootView, emailLayout, emailsLayout,
          phoneLayout, phonesLayout, photoLayout, photosLayout, topLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
